{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","temp","e","console","log","state","name","age","email","react_default","a","createElement","className","dist_default","id","required","readOnly","type","placeholder","value","readOnlyonChange","min","max","class","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c146830.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport ReactFccTest from \"react-fcctest\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      age: \"\",\n      email: \"\"\n    };\n  }\n  temp = e => {\n    console.log(\"hi\");\n  };\n\n  render() {\n    return (\n      <main className=\"container\">\n        <ReactFccTest />\n        <div className=\"app\">\n          <h1 id=\"title\">Election Day!</h1>\n          <p id=\"description\">\n            Please fill out the survey/poll for your totally legit local\n            government election!\n          </p>\n          <form id=\"survey-form\">\n            <div className=\"form-group\">\n              <label id=\"name-label\">Name </label>\n              <input\n                required\n                id=\"name\"\n                readOnly\n                type=\"text\"\n                placeholder=\"name\"\n                className=\"form-control\"\n                value=\"name\"\n                name=\"name\"\n              />\n              <label id=\"email-label\">Name </label>\n              <input\n                required\n                readOnlyonChange={this.temp}\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value=\"email\"\n                name=\"email\"\n                id=\"email\"\n              />\n              <label id=\"number-label\">Name </label>\n              <input\n                id=\"number\"\n                required\n                readOnlyonChange={this.temp}\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Age\"\n                value=\"number\"\n                name=\"age\"\n                min=\"18\"\n                max=\"120\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Choose which Party you want to Vote for</label>\n              <select class=\"form-control\" id=\"dropdown\">\n                <option value=\"Lions Party\">Lion Party</option>\n                <option value=\"Elephant Party\">Elephant Party</option>\n                <option value=\"Tiger Party\">Tiger Party</option>\n                <option value=\"Emu Party\"> Emu Party</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label>\n                Do you think any of these parties will do a good job in\n                goverment?\n              </label>\n              <div class=\"form-check\">\n                <input\n                  readOnlyonChange={this.temp}\n                  type=\"radio\"\n                  name=\"radio-buttons\"\n                  value=\"Nope\"\n                />\n                <label>Nope</label>\n              </div>\n              <div class=\"form-check\">\n                <input\n                  readOnlyonChange={this.temp}\n                  type=\"radio\"\n                  name=\"radio-buttons\"\n                  value=\"Maybe\"\n                />{\" \"}\n                <label> Maybe</label>\n              </div>\n              <div class=\"form-check\">\n                <input\n                  readOnlyonChange={this.temp}\n                  type=\"radio\"\n                  name=\"radio-buttons\"\n                  value=\"Yes\"\n                />{\" \"}\n                <label>Yes</label>\n              </div>\n            </div>\n\n            <div className=\"form-check\">\n              <header>\n                To help us improve the election, tick all of the boxes that\n                apply\n              </header>\n\n              <input\n                readOnlyonChange={this.temp}\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"zoo-animals\"\n                value=\"Zoo animals\"\n              />\n              <label className=\"form-check-label\">\n                We need to stop voting in zoo animals\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                readOnlyonChange={this.temp}\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"awesome\"\n                value=\"awesome\"\n              />\n              <label> Keep it up! This is the best election ever! </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                readOnlyonChange={this.temp}\n                type=\"checkbox\"\n                name=\"no \"\n                className=\"form-check-input\"\n                value=\"no\"\n              />\n              <label> No this is fine </label>\n            </div>\n            <div className=\"form-check\">\n              <input\n                readOnlyonChange={this.temp}\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                name=\"more icecream\"\n                value=\"more icecream\"\n              />\n              <label> More icecream, please </label>\n            </div>\n\n            <div className=\"form-group\">\n              <textarea className=\"form-control\" />\n              <input\n                readOnlyonChange={this.temp}\n                type=\"submit\"\n                value=\"Submit\"\n                className=\"btn-primary btn\"\n                id=\"submit\"\n              />\n            </div>\n          </form>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}